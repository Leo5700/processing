import ComputationalGeometry.*;

IsoWrap wrap;

float noiseX = 0;
float noiseScale = 275;
float noiseStep = 0.002;

int numPoints = 7500;

void setup() {
  
  size(960, 960, P3D);
  smooth();

}

void draw(){
  
  background(220);
  lights();  
  float zm = 250;
  float sp = 0.01 * frameCount;
  camera(zm * cos(sp), zm * sin(sp), zm, 0, 0, 0, 0, 0, -1);

  wrap = new IsoWrap(this);
  // Add points
  for (int i=0; i<numPoints; i++) {
   
    float px = noise(i+1 + noiseX) * noiseScale - noiseScale/2;
    float py = noise(i+2 + noiseX) * noiseScale - noiseScale/2;
    float pz = noise(i+3 + noiseX) * noiseScale - noiseScale/2;

//    size(2);
    point(px, py, pz);
          
    wrap.addPt( new PVector(px, py, pz) );
  }  

  fill(0, 0, 0, 50);
//  noFill();
  strokeWeight(1.1);
  stroke(100);
  wrap.plot();
  
  noiseX += noiseStep;
}

